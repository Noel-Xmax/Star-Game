{"version":3,"sources":["Math.utils.js","Components/StarsDisplay.js","Components/PlayNumber.js","Components/PlayAgain.js","Components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["utils","sum","arr","reduce","acc","curr","range","min","max","Array","from","length","_","i","random","Math","floor","randomSumIn","sets","sums","j","len","candidateSet","concat","candidateSum","push","StarsDisplay","props","count","map","starId","className","colors","available","used","wrong","candidate","PlayNumber","style","backgroundColor","status","onClick","number","PlayAgain","color","gameStatus","Game","timeLimit","useState","stars","setStars","availableNums","setAvailableNums","candidateNums","setCandidateNums","secondsLeft","setSecondsLeft","useEffect","timerId","setTimeout","clearTimeout","setGameState","newCandidateNums","newAvailableNums","filter","n","includes","useGameState","candidatesAreWrong","numberStatus","onNumberClick","currentStatus","cn","startNewGame","StarMatch","gameId","setGameId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.ed5938fe.chunk.js","sourcesContent":["\r\nconst utils = {\r\n  \r\n  sum: arr => arr.reduce((acc, curr) => acc + curr, 0),\r\n\r\n\r\n  range: (min, max) => Array.from({ length: max - min + 1 }, (_, i) => min + i),\r\n\r\n  random: (min, max) => min + Math.floor(Math.random() * (max - min + 1)),\r\n\r\n\r\n  randomSumIn: (arr, max) => {\r\n    const sets = [[]];\r\n    const sums = [];\r\n    for (let i = 0; i < arr.length; i++) {\r\n      for (let j = 0, len = sets.length; j < len; j++) {\r\n        const candidateSet = sets[j].concat(arr[i]);\r\n        const candidateSum = utils.sum(candidateSet);\r\n        if (candidateSum <= max) {\r\n          sets.push(candidateSet);\r\n          sums.push(candidateSum);\r\n        }\r\n      }\r\n    } \r\n    return sums[utils.random(0, sums.length - 1)];\r\n  },\r\n};\r\nexport default utils;","import React from \"react\";\r\nimport utils from \"../Math.utils\";\r\n\r\n\r\nconst StarsDisplay = props => (\r\n  <>\r\n    {utils.range(1, props.count).map(starId => (\r\n      <div key={starId} className=\"star\" />\r\n    ))}\r\n  </>\r\n);\r\nexport default StarsDisplay;","import React from 'react';\r\n\r\nconst PlayNumber = props => (\r\n  <button\r\n    className=\"number\"\r\n    style={{ backgroundColor: colors[props.status] }}\r\n    onClick={() => props.onClick(props.number, props.status)}\r\n  >\r\n    {props.number}\r\n  </button>\r\n);\r\n\r\nconst colors = {\r\n  available: 'lightgray',\r\n  used: 'lightgreen',\r\n  wrong: 'lightcoral',\r\n  candidate: 'deepskyblue',\r\n};\r\n\r\n\r\nexport default PlayNumber;","import React from 'react';\r\n\r\nconst PlayAgain = props => (\r\n  <div className=\"game-done\">\r\n    <div\r\n      className=\"message\"\r\n      style={{ color: props.gameStatus === 'lost' ? 'red' : 'green' }}\r\n    >\r\n      {props.gameStatus === 'lost' ? 'Game Over' : 'Nice'}\r\n    </div>\r\n    <button onClick={props.onClick}>Play Again</button>\r\n  </div>\r\n);\r\n\r\nexport default PlayAgain;","import React, { useState, useEffect } from \"react\";\r\nimport utils from \"../Math.utils\";\r\nimport StarsDisplay from \"./StarsDisplay\";\r\nimport PlayNumber from \"./PlayNumber\";\r\nimport PlayAgain from \"./PlayAgain\";\r\n\r\nconst useGameState = timeLimit => {\r\n  const [stars, setStars] = useState(utils.random(1, 9));\r\n  const [availableNums, setAvailableNums] = useState(utils.range(1, 9));\r\n  const [candidateNums, setCandidateNums] = useState([]);\r\n  const [secondsLeft, setSecondsLeft] = useState(10);\r\n\r\n  useEffect(() => {\r\n    if (secondsLeft > 0 && availableNums.length > 0) {\r\n      const timerId = setTimeout(() => setSecondsLeft(secondsLeft - 1), 1000);\r\n      return () => clearTimeout(timerId);\r\n    }\r\n  });\r\n\r\n  const setGameState = (newCandidateNums) => {\r\n    if (utils.sum(newCandidateNums) !== stars) {\r\n      setCandidateNums(newCandidateNums);\r\n    } else {\r\n      const newAvailableNums = availableNums.filter(\r\n        n => !newCandidateNums.includes(n)\r\n      );\r\n      setStars(utils.randomSumIn(newAvailableNums, 9));\r\n      setAvailableNums(newAvailableNums);\r\n      setCandidateNums([]);\r\n    }\r\n  };\r\n\r\n  return { stars, availableNums, candidateNums, secondsLeft, setGameState };\r\n};\r\n\r\nconst Game = props => {\r\n  const {\r\n    stars,\r\n    availableNums,\r\n    candidateNums,\r\n    secondsLeft,\r\n    setGameState,\r\n  } = useGameState();\r\n\r\n  const candidatesAreWrong = utils.sum(candidateNums) > stars;\r\n  const gameStatus = availableNums.length === 0\r\n    ? 'won'\r\n    : secondsLeft === 0 ? 'lost' : 'active'\r\n\r\n  const numberStatus = number => {\r\n    if (!availableNums.includes(number)) {\r\n      return 'used';\r\n    }\r\n\r\n    if (candidateNums.includes(number)) {\r\n      return candidatesAreWrong ? 'wrong' : 'candidate';\r\n    }\r\n\r\n    return 'available';\r\n  };\r\n\r\n  const onNumberClick = (number, currentStatus) => {\r\n    if (currentStatus === 'used' || secondsLeft === 0) {\r\n      return;\r\n    }\r\n\r\n    const newCandidateNums =\r\n      currentStatus === 'available'\r\n        ? candidateNums.concat(number)\r\n        : candidateNums.filter(cn => cn !== number);\r\n\r\n    setGameState(newCandidateNums);\r\n  };\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"help\">\r\n        Pick 1 or more numbers that sum to the number of stars\r\n      </div>\r\n      <div className=\"body\">\r\n        <div className=\"left\">\r\n          {gameStatus !== 'active' ? (\r\n            <PlayAgain onClick={props.startNewGame} gameStatus={gameStatus} />\r\n          ) : (\r\n            <StarsDisplay count={stars} />\r\n          )}\r\n        </div>\r\n        <div className=\"right\">\r\n          {utils.range(1, 9).map(number => (\r\n            <PlayNumber\r\n              key={number}\r\n              status={numberStatus(number)}\r\n              number={number}\r\n              onClick={onNumberClick}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"timer\">Time Remaining: {secondsLeft}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Game;","\nimport React, { useState, useEffect } from \"react\";\nimport Game from \"./Components/Game\";\n\nconst StarMatch = () => {\n  const [gameId, setGameId] = useState(1);\n  return <Game key={gameId} startNewGame={() => setGameId(gameId + 1)} />;\n}\n\nexport default StarMatch;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}